/*  em unit is a relative unit  */
/*The em unit in CSS is a relative unit that scales based on the font size of its parent element or its own font size if used for other properties  */
/* font size of parent in the case of typographical properties like font-size and font size of the element itself in the case of other properties like width */


#outter{
    width: 300px;
    height: 300px;
  background-color: pink;
    border: 2px solid black;
    font-size: 20px;
    /* inner will have same font size */
}

#inner{
    width: 100px;
    height: 100px;
    background-color: rgb(121, 169, 240);
    border: 2px solid black;
    /* to change the font size we will use em */
    font-size: 2em;
    /* 2em is double of original size here it means 20px will become 40px */
 padding: 1em ; 
 /* padding will be in relation with inner div font size  which will be 40px as it is 1em */
}
button{
    font-size: 50px;
   
    padding: 0.5em;
   padding-left: 1em;
    border-radius: 20px;

}
/* drawback of em */
/* which is snowball effect in nested element . like there is a parents then its child then its child  thn its child and so on ,
 as em depends on parent for its property here there will be new property for each child as its property are coming from the parent and its property are coming from its parent  */
span{
    font-size: 2em;
    display: block;
}



/* to avoid this we can use rem unit */
/* rem unit is relative to the root element of the document  */